/* Autogenerated file. Do not edit manually. */

package {{.Package}}

import (
    "reflect"

	archtypes "github.com/concrete-eth/archetype/types"
	"github.com/ethereum/go-ethereum/concrete/lib"

	{{ range .Imports }}
	{{- if .Name }}{{ .Name }} "{{ .Path }}"
    {{- else }}"{{ .Path }}"{{ end }}
	{{ end }}
)

var TablesABIJson = contract.ContractABI

var TablesSchemaJson = `{{.Json}}`

var TableSpecs archtypes.TableSpecs

func init() {
    types := map[string]reflect.Type{
        {{- range .Schemas }}
        "{{.Name}}": reflect.TypeOf({{TableStructNameFn .Name}}{}),
        {{- end }}
    }
    getters := map[string]archtypes.GetterFn{
        {{- range .Schemas }}
        "{{.Name}}": func(ds lib.Datastore) interface{} {
            return mod.New{{.Name}}(ds)
        },
        {{- end }}
    }
    var err error
    if TableSpecs, err = archtypes.NewTableSpecsFromRaw(TablesABIJson, TablesSchemaJson, types, getters); err != nil {
        panic(err)
    }
}
