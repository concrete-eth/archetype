/* Autogenerated file. Do not edit manually. */

package {{.Package}}

import (
    "reflect"

    archtypes "github.com/concrete-eth/archetype/types"
    "github.com/ethereum/go-ethereum/common"

	{{ range .Imports }}
	"{{.}}"
	{{ end }}
)

var (
	_ = common.Big1
)

{{ if .Schemas }}
const (
    {{- range $index, $element := .Schemas }}
    ActionId_{{.Name}}{{ if eq $index 0 }} uint8 = iota{{ end }}
    {{- end }}
)
{{ end }}

var Actions = archtypes.ActionSpecs{
    Actions: actionMap,
    ABI: nil,
}

var actionMap = archtypes.ActionMap{
    {{- range .Schemas }}
    ActionId_{{.Name}}: {
        Id: ActionId_{{.Name}},
        Name: "{{.Name}}",
        MethodName: "{{_lowerFirstChar .Name}}",
        Type: reflect.TypeOf(ActionData_{{.Name}}{}),
    },
    {{- end }}
}

{{ range $schema := .Schemas }}
type ActionData_{{.Name}} struct{
    {{- range .Values }}
    {{.PascalCase}} {{.Type.GoType}} `json:"{{.Name}}"`
    {{- end }}
}
{{ range .Values }}
func (action *ActionData_{{$schema.Name}}) Get{{.PascalCase}}() {{.Type.GoType}} {
    return action.{{.PascalCase}}
}
{{ end }}
{{ end }}
