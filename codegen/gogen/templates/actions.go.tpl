/* Autogenerated file. Do not edit manually. */

package {{.Package}}

import (
    "reflect"

	"github.com/concrete-eth/archetype/arch"

	{{ range .Imports }}
	{{- if .Name }}{{ .Name }} "{{ .Path }}"
    {{- else }}"{{ .Path }}"{{ end }}
	{{ end }}
)

var ActionsABIJson = contract.ContractABI

var ActionsSchemaJson = `{{.Json}}`

var ActionSpecs arch.ActionSpecs

func init() {
    types := map[string]reflect.Type{
        {{- range .Schemas }}
        "{{.Name}}": reflect.TypeOf({{GoActionStructNameFn .Name}}{}),
        {{- end }}
    }
    var err error
	if ActionSpecs, err = arch.NewActionSpecsFromRaw(ActionsABIJson, ActionsSchemaJson, types); err != nil {
		panic(err)
	}
}

type IActions interface {
    {{- range .Schemas }}
    {{.Name}}(action *{{GoActionStructNameFn .Name}}) error
    {{- end }}
}
