/* Autogenerated file. Do not edit manually. */

package archmod

import (
	"reflect"

	archtypes "github.com/concrete-eth/archetype/types"
	"github.com/ethereum/go-ethereum/common"
)

var (
	_ = common.Big1
)

const (
	ActionId_Move archtypes.RawIdType = iota
)

var Actions = archtypes.ActionSpecs{
	Actions: actionMap,
	ABI:     nil,
}

var actionMap = archtypes.ActionMap{
	ActionId_Move: {
		// RawId: ActionId_Move,
		Name:       "Move",
		MethodName: "move",
		Type:       reflect.TypeOf(ActionData_Move{}),
	},
}

type ActionData_Move struct {
	PlayerId  uint8 `json:"playerId"`
	Direction uint8 `json:"direction"`
}

func (action *ActionData_Move) GetPlayerId() uint8 {
	return action.PlayerId
}

func (action *ActionData_Move) GetDirection() uint8 {
	return action.Direction
}
