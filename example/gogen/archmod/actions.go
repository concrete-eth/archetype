/* Autogenerated file. Do not edit manually. */

package archmod

import (
	"reflect"

	"github.com/concrete-eth/archetype/arch"

	contract "github.com/concrete-eth/archetype/example/gogen/abigen/actions"
)

var ActionsABIJson = contract.ContractABI

var ActionsSchemaJson = `{
    "addPlayer": {
        "schema": {
            "x": "int16",
            "y": "int16"
        }
    },
    "move": {
        "schema": {
            "playerId": "uint16",
            "direction": "uint8"
        }
    }
}
`

var ActionSpecs arch.ActionSpecs

func init() {
	types := map[string]reflect.Type{
		"AddPlayer": reflect.TypeOf(ActionData_AddPlayer{}),
		"Move":      reflect.TypeOf(ActionData_Move{}),
	}
	var err error
	if ActionSpecs, err = arch.NewActionSpecsFromRaw(ActionsABIJson, ActionsSchemaJson, types); err != nil {
		panic(err)
	}
}

type IActions interface {
	AddPlayer(action *ActionData_AddPlayer) error
	Move(action *ActionData_Move) error
}
