/* Autogenerated file. Do not edit manually. */

package archmod

import (
	"reflect"

	"github.com/concrete-eth/archetype/arch"

	contract "github.com/concrete-eth/archetype/example/gogen/abigen/tables"
	"github.com/concrete-eth/archetype/example/gogen/datamod"
)

var TablesABIJson = contract.ContractABI

var TablesSchemaJson = `{
    "meta": {
        "schema": {
            "startBlock": "uint64",
            "maxPlayers": "uint16",
            "playerCount": "uint16"
        }
    },
    "players": {
        "keySchema": {
            "playerId": "uint16"
        },
        "schema": {
            "x": "int16",
            "y": "int16"
        }
    },
    "board": {
        "keySchema": {
            "x": "int16",
            "y": "int16"
        },
        "schema": {
            "playerId": "uint16"
        }
    }
}`

var TableSpecs arch.TableSpecs

func init() {
	types := map[string]reflect.Type{
		"Meta":    reflect.TypeOf(RowData_Meta{}),
		"Players": reflect.TypeOf(RowData_Players{}),
		"Board":   reflect.TypeOf(RowData_Board{}),
	}
	getters := map[string]interface{}{
		"Meta":    datamod.NewMeta,
		"Players": datamod.NewPlayers,
		"Board":   datamod.NewBoard,
	}
	var err error
	if TableSpecs, err = arch.NewTableSpecsFromRaw(TablesABIJson, TablesSchemaJson, types, getters); err != nil {
		panic(err)
	}
}
